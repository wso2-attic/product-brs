<?xml version="1.0" encoding="iso-8859-1"?>
<!--
~ Copyright (c) 2009, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied. See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
  <title>WSO2 BRS Samples Greeting Service</title>
  <link href="../css/brs-docs.css" rel="stylesheet" />
  <link href="../styles/dist-docs.css" rel="stylesheet" type="text/css"
  media="all" />
</head>

<body>
<p>[<a href="../docs_index.html">Documentation Index</a>] 
<h1>WSO2 BRS - Samples : Greeting Service</h1>

<p>This guide demonstrates a simple greeting service which uses business
rules.</p>

<p>Please follow the <a href="../user_guide.html">User Guide</a> before proceeding with this sample, if you have
not already followed the <a href="../user_guide.html">User Guide</a>. </p>

<h2>Contents</h2>

<div class="toc">
<ul>
  <li><a href="#GreetingService">Greeting Service</a> </li>
  <li><a href="#References">References</a> </li>
</ul>
</div>

<h2 id="GreetingService">Greeting Service</h2>

<h3>Rules</h3>

<p>Rule 1 : If the time is between 12 and 18, say good afternoon</p>

<p>Rule 2 : If the time is between 6 and 12, say good morning</p>

<p>Rule 3 : If the time is between 18 and 24, say good night</p>

<h3>Facts</h3>
</p>

<p>There is one fact - <i>A user logged-in into the system</i>. Furthermore ,
GreetingMessage is used to present the result of the rule execution </p>
<pre>package samples.greeting;

import java.util.Calendar;

/**
 * User
 */
public class User {

    private String name ;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int now(){
        Calendar cal = Calendar.getInstance();
        return cal.get(Calendar.HOUR_OF_DAY);
    }
}
    
package samples.greeting;

/**
 * greeting message
 */
public class GreetingMessage {

    private String message ;

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }
}</pre>

<p><h3>Rule Service Configuration - service.rsl</h3>
Here we use inlined rule set within the service.rsl file
</p>
<pre>&lt;ruleService
       name=&quot;GreetingService&quot;
       xmlns=&quot;http://wso2.org/carbon/rules&quot;
       targetNamespace=&quot;http://com.test/greeting&quot;&gt;
    &lt;ruleSet&gt;
       &lt;rule resourceType=&quot;regular&quot; sourceType=&quot;inline&quot;&gt;
           &lt;![CDATA[
               package greeting

               import samples.greeting.GreetingMessage;
               import samples.greeting.User;

               rule &quot;Is Morning&quot; no-loop true
               when
                   user : User()
                   eval((6 &lt; user.now()) &amp;&amp; (user.now()&lt; 12))
               then
                   GreetingMessage msg = new GreetingMessage();
                   msg.setMessage(&quot;Good Morning  &quot; + user.getName() + &quot; !!! &quot;);
                   insertLogical(msg);
               end

               rule &quot;Is afternoon&quot; no-loop true
               when
                   user : User()
                   eval((12 &lt;= user.now()) &amp;&amp; (user.now() &lt; 18))
               then
                   GreetingMessage msg = new GreetingMessage();
                   msg.setMessage(&quot;Good Afternoon  &quot; + user.getName() + &quot; !!! &quot;);
                   insertLogical(msg);
               end

               rule &quot;Is Night&quot; no-loop true
               when
                   user : User()
                   eval( (18 &lt;= user.now()) &amp;&amp; (user.now() &lt; 24))
               then
                   GreetingMessage msg = new GreetingMessage();
                   msg.setMessage(&quot;Good Night  &quot; + user.getName() + &quot; !!! &quot;);
                   insertLogical(msg);
               end
           ]]&gt;
       &lt;/rule&gt;
    &lt;/ruleSet&gt;
    &lt;operation name=&quot;greetMe&quot;&gt;
       &lt;input wrapperElementName=&quot;user&quot; namespace=&quot;http://com.test/greeting&quot;&gt;
           &lt;fact elementName=&quot;user&quot; namespace=&quot;http://com.test/greeting&quot; type=&quot;samples.greeting.User&quot;&gt;&lt;/fact&gt;
       &lt;/input&gt;
       &lt;output wrapperElementName=&quot;greetingMessage&quot; namespace=&quot;http://com.test/greeting&quot;&gt;
           &lt;fact elementName=&quot;greetingMessage&quot; namespace=&quot;http://com.test/greeting&quot; type=&quot;samples.greeting.GreetingMessage&quot;&gt;&lt;/fact&gt;
       &lt;/output&gt;
    &lt;/operation&gt;
&lt;/ruleService&gt;</pre>

<h3>Deploying Service </h3>

<p>You can either create an .aar file and upload or create a rule service using
rule service wizard UI. Please refer the <a href="../user_guide.html">User Guide</a> for more information.</p>

<p><h3>Testing Sample</h3>
You can use Try-it tool with a request similar to the following. </p>
<pre>        &lt;name&gt;your name&lt;/name&gt;
   </pre>

<p>You can also use the code generation. There is an option for code generation
in the services management page. A client using generated stub codes is shown
bellow. Codes were generated with option Unpacks the databinding classes.</p>
<pre>package org.wso2.carbon.samples;

import java.lang.String;
import org.wso2.carbon.samples.greetingService.greeting.*;
import org.apache.axis2.AxisFault;
import java.rmi.RemoteException;

public class GreetingServiceTestCase {

    public static void main(String[] args) {

        try {
            GreetingServiceStub greetingServiceStub = new GreetingServiceStub("http://localhost:9763/services/GreetingService");

            UserE userRequest = new UserE();
            User user = new User();
            user.setName("your name");
            User[] users = new User[1];
            users[0] = user;
            userRequest.setUser(users);

            GreetingMessage[] greetingMessages = greetingServiceStub.greetMe(users);
            String result = greetingMessages[0].getMessage();
            System.out.println(result);

        } catch (AxisFault axisFault) {
            axisFault.printStackTrace();
        } catch (RemoteException e) {
            e.printStackTrace();
        }
    }
}
</pre>

<p><h2 id="References">References</h2>
</p>
</body>
</html>